services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: example
      POSTGRES_DB: my_database
    restart: always

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    restart: always

  pgadmin:
    container_name: dev-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres

  celery_worker:
      build:
        context: ../../  # ⬅️ Set the build context to the project root (cookie/)
        dockerfile: devops/db/Dockerfile
      container_name: db-celery-worker
      depends_on:
        - redis
        - postgres
      environment:
        - CELERY_BROKER_URL=redis://db-redis:6379/0
        - CELERY_RESULT_BACKEND=redis://db-redis:6379/0
      volumes:
        - ../../backend:/backend  # ⬅️ Mount backend code inside the container
      command: celery -A backend.redis.celery_worker worker --loglevel=info

  celery_beat:
    build:
      context: ../../
      dockerfile: devops/db/Dockerfile
    container_name: db-celery-beat
    depends_on:
      - redis
      - postgres
      - celery_worker
    volumes:
      - ../../backend:/backend
    command: celery -A backend.redis.celery_worker beat --loglevel=info
